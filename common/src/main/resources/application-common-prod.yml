spring:
  #数据库连接配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #url: jdbc:mysql://${mysql.host}:3306/demo?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowMultiQueries=true
    #username: ${mysql.user}
    #password: ${mysql.pwd}
    type: com.alibaba.druid.pool.DruidDataSource
    # DRUID连接池配置
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://${mysql.host}:3306/demo?characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
        username: ${mysql.user}
        password: ${mysql.pwd}
        # 初始连接数
        initial-size: 5
        # 最小连接池数量
        min-idle: 10
        # 最大连接池数量
        max-active: 20
        # 配置获取连接等待超时的时间
        max-wait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        # 配置一个连接在池中最大生存的时间，单位是毫秒
        max-evictable-idle-time-millis: 900000
        # 配置检测连接是否有效
        validation-query: SELECT 1;
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        filters: stat,wall
        web-stat-filter:
          enabled: true
        stat-view-servlet:
          enabled: true
          # 设置白名单，不填则允许所有访问
          #allow:
          url-pattern: /druid/*
          # 控制台管理用户名和密码
          login-username: admin
          login-password: ${mysql.pwd}
        filter:
          stat:
            enabled: true
            # 慢SQL记录
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:

  #  #前端文件目录
  #  resources:
  #    static-locations: file:/var/front/

  #redis
  redis:
    host: ${redis.host}
    port: 6379
    #Redis数据库索引（默认为0）
    database: 0
    #超时时间，毫秒
    timeout: 5000

  # quartz
  quartz:
    jdbc:
      initialize-schema: never
